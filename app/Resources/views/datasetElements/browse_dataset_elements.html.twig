{% extends 'default_bootstrap_admin.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.datatables.net/buttons/1.5.1/css/buttons.bootstrap.min.css" rel="stylesheet" type="text/css" />
{% endblock %}

{% block content %}

    <ol class="breadcrumb">
        <li><a href="/admin">Dashboard</a></li>
        <li><a href="/admin/workspace">Browse Projects</a></li>
        <li><strong>Project:</strong> <a href="/admin/projects/subjects/{{ project_repository_id }}">{{ project_data.project_name|e }}</a></li>
        <li><strong>Subject:</strong> <a href="/admin/projects/items/{{ project_repository_id }}/{{ subject_repository_id }}">{{ subject_data.subject_name|e }}</a></li>
        <li><strong>Item:</strong> <a href="/admin/projects/datasets/{{ project_repository_id }}/{{ subject_repository_id }}/{{ item_repository_id }}">{{ item_data.item_description_truncated }}</a></li>
        <li class="active"><strong>Capture Dataset:</strong> {{ dataset_data.capture_dataset_name|e }}</li>
    </ol>

    <div class="row">
        <div class="col-sm-6 col-md-6">
            <dl class="dl-horizontal">
                <dt>Capture Dataset Name</dt>
                <dd>{{ dataset_data.capture_dataset_name|e }}</dd>
                <dt>Date Of Capture</dt>
                <dd>{{ dataset_data.date_of_capture|e }}</dd>
                <dt>Capture Dataset Type</dt>
                <dd>{{ dataset_data.capture_dataset_type|e }}</dd>
                <dt>Collected By</dt>
                <dd>{{ dataset_data.collected_by|e }}</dd>
            </dl>
        </div>
        <div class="col-sm-6 col-md-6">
            <dl class="dl-horizontal">
                <dt>Capture Method</dt>
                <dd>{{ dataset_data.capture_method_label|e }}</dd>
                <dt>Date Created</dt>
                <dd>{{ dataset_data.date_created|e }}</dd>
                <dt>Last Modified</dt>
                <dd>{{ dataset_data.last_modified|e }}</dd>
            </dl>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6 col-md-6 col-hidden-toggle clearfix">
            <dl class="dl-horizontal">
                <dt>Positionally Matched Sets ID</dt>
                <dd>{{ dataset_data.positionally_matched_capture_datasets|e }}</dd>
                <dt>Light Source</dt>
                <dd>{{ dataset_data.light_source_type|e }}</dd>
                <dt>Cluster Geometry Geometry ID</dt>
                <dd>{{ dataset_data.cluster_geometry_field_id|e }}</dd>
                <dt>Dataset Guid</dt>
                <dd>{{ dataset_data.capture_dataset_guid|e }}</dd>
            </dl>
        </div>
        <div class="col-sm-6 col-md-6 col-hidden-toggle">
            <dl class="dl-horizontal">
                <dt>Item Position Type</dt>
                <dd>{{ dataset_data.item_position_type|e }}</dd>
                <dt>Focus Type</dt>
                <dd>{{ dataset_data.focus_type|e }}</dd>
                <dt>Light Source Type</dt>
                <dd>{{ dataset_data.light_source_type|e }}</dd>
                <dt>Background Removal Method</dt>
                <dd>{{ dataset_data.background_removal_method|e }}</dd>
                <dt>Camera Cluster Type</dt>
                <dd>{{ dataset_data.camera_cluster_type_label|e }}</dd>
            </dl>
        </div>
        <div class="col-sm-12 col-md-12 col-hidden-toggle">
            <dl class="dl-horizontal">
                <dt>Dataset Description</dt>
                <dd>{{ dataset_data.capture_dataset_description|e|nl2br }}</dd>
                <dt>Dataset Collection Notes</dt>
                <dd>{{ dataset_data.collection_notes|e|nl2br }}</dd>
            </dl>
            {% if dataset_data.directory_path is defined and dataset_data.directory_path %}
            <hr>
            <h3>Uploaded Files</h3>
            <div id="jstreeContainer"></div>
            <hr>
            {% endif %}
        </div>

        <div class="col-sm-12 col-md-12">
            <a href="javascript:void(0);" class="view-hidden-content" role="button" data-original-text="Expand Details and View Uploaded Files"><span class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span> <span class="view-hidden-content-text">Expand Details and View Uploaded Files</span></a>
            <hr>
        </div>

        <div class="col-sm-12 col-md-12">
            <a href="/admin/projects/datasets/{{ project_repository_id }}/{{ subject_repository_id }}/{{ item_repository_id }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span> Back to Item</a>
            <a href="/admin/projects/dataset/{{ project_repository_id }}/{{ subject_repository_id }}/{{ item_repository_id }}/{{ capture_dataset_repository_id }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit Dataset</a>
        </div>

        <div class="col-sm-12 col-md-12 child-data">

            <div class="panel panel-default">
                <div class="panel-body">
                    <h2>Capture Data Elements</h2>
                    <a href="/admin/projects/dataset_element/{{ project_repository_id }}/{{ subject_repository_id }}/{{ item_repository_id }}/{{ capture_dataset_repository_id }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add a Capture Data Element</a>
                    <table id="browse" class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                        <tr>
                            <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                            <th class="text-center">Download</th>
                            <th class="text-center">Capture Device Configuration ID</th>
                            <th class="text-center">Capture Device Field ID</th>
                            <th class="text-center">Capture Sequence Number</th>
                            <th class="text-center">Cluster Position Field ID</th>
                            <th class="text-center">Position In Cluster Field ID</th>
                            <th class="text-center">Last Modified</th>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <h2>Capture Dataset Rights</h2>
                    <input type="hidden" id="delete-path" value="admin/projects/capture_dataset_rights/delete" />

                    <table id="browse_capture_dataset_rights" class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                        <tr>
                            <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                            <th class="text-center">Data Rights Restriction</th>
                            <th class="text-center">Start Date</th>
                            <th class="text-center">End Date</th>
                            <th class="text-center">Last Modified</th>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <h2>Master models derived from dataset</h2>
                    <input type="hidden" id="delete-path" value="admin/projects/model/delete" />
                    <table id="browse_models" class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                        <tr>
                            <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                            <th class="text-center"></th>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>

            

            <div class="panel panel-default">
                <div class="panel-body">
                    <h2>Photogrammetry Scale Bars</h2>
                    <input type="hidden" id="delete-path" value="admin/projects/photogrammetry_scale_bar/delete" />
                    <table id="browse_photogrammetry_scale_bars" class="table table-striped table-bordered" cellspacing="0" width="100%">
                        <thead>
                        <tr>
                            <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                            <th class="text-center">Scale Bar ID</th>
                            <th class="text-center">Scale Bar Manufacturer</th>
                            <th class="text-center">Scale Bar Barcode Type</th>
                            <th class="text-center">Scale Bar Target Pairs</th>
                            <th class="text-center">Last Modified</th>
                        </tr>
                        </thead>
                    </table>
                </div>
            </div>

        </div>

    </div> <!-- /row -->
{% endblock %}
{% block js_bottom %}
    {{ parent() }}
    <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.colVis.min.js"></script>
    <!-- The following Javascript is needed for download CSV, download Excel, and print capabilities -->
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js "></script>
    <script type="text/javascript">
      $(document).ready(function() {
        var project_repository_id = "{{ project_repository_id }}",
            subject_repository_id = "{{ subject_repository_id }}",
            item_repository_id = "{{ item_repository_id }}",
            capture_dataset_repository_id =  "{{ capture_dataset_repository_id }}",
            details_page = "/admin/projects/dataset_element/",
            directory_path = "{{ dataset_data.directory_path }}";

        // Initialize jsTree.
        // See: https://www.jstree.com/
        $('#jstreeContainer').jstree({
            'cache': false,
            'state': { 'key': 'dpoJsTreeFiles' },
            'core': {
              'data': {
                'url': '/admin/get_directory_contents/false?path=' + directory_path + '&record_id=' + capture_dataset_repository_id,
                'data': function (node) {
                    return { 'id' : node.id };
                },
                'force_text' : true
              },
            },
            'sort': function(a, b) {
                return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : (this.get_type(a) >= this.get_type(b) ? 1 : -1);
            },
            'types': {
                'default' : { 'icon' : 'glyphicon glyphicon-folder-close' },
                'file' : { 'valid_children' : [], 'icon' : 'file' }
            },
            'unique': {
                'duplicate' : function (name, counter) {
                    return name + ' ' + counter;
                }
            },
            'plugins': ['sort','types','unique']
        });

        // jsTree prevents the default anchor href action, so it need to be overridden.
        $('#jstreeContainer').on('click', 'a', function(e) {
          document.location.href = this.href;
        });

        $('#browse').dataTable( {
          "columns": [
            { "data": "manage" },
            { "data": "manage" },
            { "data": "capture_device_configuration_id" },
            { "data": "capture_device_field_id" },
            { "data": "capture_sequence_number" },
            { "data": "cluster_position_field_id" },
            { "data": "position_in_cluster_field_id" },
            { "data": "last_modified" }
          ],
          "dom": 'lfip<"datatables_bulk_actions">tip',
          "pagingType": "simple_numbers",
          "stateSave": true,
          "order": [[7,"desc"]],
          // Show processing throbber.
          "processing": true,
          "serverMethod": "POST",
          // All data management will be done on the server side.
          "serverSide": true,
          // Path to the file that is going to handle the queries.
          "ajax": "/admin/projects/datatables_browse_dataset_elements/{{ project_repository_id }}/{{ subject_repository_id }}/{{ item_repository_id }}/{{ capture_dataset_repository_id }}",
          // Method type.
          "serverMethod": "POST",
          // Values in the length dropdown.
          "lengthMenu":[10,50,100,500],
          // Set some widths.
          "aoColumnDefs":[
            {"sWidth":"106px","aTargets":[0,1]},
            {"bSortable":false,"aTargets":[0]},
          ],
          "fnRowCallback":function(nRow, aData, iDisplayIndex) {

            // This table row.
            var thisTableRow = $(nRow);
            // Create the delete record checkboxes.
            thisTableRow.find('td:eq(0)')
              .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
              .addClass("manage_column");
            // Create the download checkboxes.
            thisTableRow.find('td:eq(1)')
              .html("<input type='checkbox' name='download_checkbox' value='" + aData['manage'] + "' />")
              .addClass("manage_column");
            // Send to details page when clicked.
            thisTableRow.find('td').click(function() {
              // This table cell.
              var thisTableCell = $(this);
              // Don't do anything if the table cell has the 'manage_column' CSS class.
              if(thisTableCell.hasClass('manage_column')) return;
              // Send to the details page.
              var capture_data_element_repository_id = thisTableCell.closest("tr").attr('id');
              window.location.href = details_page + project_repository_id + '/' + subject_repository_id + '/' + item_repository_id + '/' + capture_dataset_repository_id + '/' + capture_data_element_repository_id;
            });
          }
        });
        var request_download_button = $("<button></button>")
          .addClass('btn btn-default glyphicon glyphicon-download-alt')
          .attr('style', 'width: 13.8rem;')
          .on("click", function(){
            var download_ids = new Array;
            $('#browse [name="download_checkbox"]:checked').each(function(){
              download_ids.push($(this).val());
            });
            if(!download_ids.length) {
              swal('No Records Selected', 'Please choose at least one record.');
              return;
            }
            if(download_ids.length > 0) {
              swal({
                  title: "Send Download Request",
                  text: "Send a request to download chosen assets?",
                  type: "warning",
                  showCancelButton: true,
                  confirmButtonColor: "#DD6B55",
                  confirmButtonText: "Send Request",
                  closeOnConfirm: true
                },
                function(){
                  // Placeholder
                });
            }
          });
        $(".datatables_bulk_actions").append(request_download_button);

        $('#browse_capture_dataset_rights').dataTable( {
          "columns": [
            { "data": "manage" },
            { "data": "data_rights_restriction" },
            { "data": "start_date" },
            { "data": "end_date" },
            { "data": "last_modified" }
          ],
          "dom": 'lfip<"datatables_bulk_actions">tip',
          "pagingType": "simple_numbers",
          "stateSave": true,
          "order": [[4,"desc"]],
          // Show processing throbber.
          "processing": true,
          "serverMethod": "POST",
          // All data management will be done on the server side.
          "serverSide": true,
          // Path to the file that is going to handle the queries.
          "ajax": {
            "url": "/admin/projects/capture_dataset_rights/datatables_browse",
            "data": {
              "parent_id": capture_dataset_repository_id
            }
          },
          // Method type.
          "serverMethod": "POST",
          // Values in the length dropdown.
          "lengthMenu":[10,50,100,500],
          // Set some widths.
          "aoColumnDefs":[
            {"sWidth":"106px","aTargets":[0]},
            {"bSortable":false,"aTargets":[0]},
          ],
          "fnRowCallback":function(nRow, aData, iDisplayIndex) {

            // This table row.
            var thisTableRow = $(nRow);
            // Create the delete record checkboxes.
            thisTableRow.find('td:eq(0)')
              .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
              .addClass("manage_column");
            // Send to details page when clicked.
            thisTableRow.find('td').click(function() {
              // This table cell.
              var thisTableCell = $(this);
              // Don't do anything if the table cell has the 'manage_column' CSS class.
              if(thisTableCell.hasClass('manage_column')) return;
              // Send to the details page.
              var this_id = thisTableCell.closest("tr").attr('id');
              window.location.href = '/admin/projects/capture_dataset_rights/manage' + '/' + capture_dataset_repository_id + '/' + this_id;
            });
          }
        });
        var capture_dataset_rights_add_button = $('<a />')
          .addClass('btn btn-default add-record-button')
          .attr('href', '/admin/projects/capture_dataset_rights/manage/' + capture_dataset_repository_id)
          .html('<span class="glyphicon glyphicon-plus"></span> Add Capture Dataset Rights');
        $('#browse_capture_dataset_rights_wrapper').find('.datatables_bulk_actions').append(capture_dataset_rights_add_button);

        $('#browse_models').dataTable( {
          "columns": [
            { "data": "manage" },
            { "data": "model_repository_id", "title": "Model Repository ID"  },
            { "data": "parent_capture_dataset_repository_id", "title": "Parent Capture Dataset Repository ID"  },
            { "data": "parent_item_repository_id", "title": "Parent Item Repository ID"  },
            { "data": "file_path", "title": "Download Model" ,
              "render": function (data, type, row, meta) {
                let thisPathArray = row.file_path.split('/'),
                    thisFileName = thisPathArray[thisPathArray.length - 1];
                return '<a href="{{ uploads_path }}' + row.file_path + '" download="model' + row.model_file_type + '" title="Download this model">' + thisFileName + '</a>';
              }
            },
            { "data": "model_file_type", "title": "Model File Type"  },
            { "data": "model_guid", "title": "Model Guid"  },
            { "data": "date_of_creation", "title": "Date of Creation"  },            
            { "data": "model_modality", "title": "Model Modality"  },
            { "data": "units", "title": "Units"  },
            { "data": "is_watertight", "title": "Is Watertight"  },
            { "data": "model_purpose", "title": "Model Purpose"  },
            { "data": "point_count", "title": "Point Count"  },
            { "data": "has_normals", "title": "Has Normals"  },
            { "data": "face_count", "title": "Face Count"  },
            { "data": "vertices_count", "title": "Vertices Count"  },
            { "data": "has_vertex_color", "title": "Has Vertex Color"  },
            { "data": "has_uv_space", "title": "Has UV Space"  },
            { "data": "model_maps", "title": "Model Maps"  },
            { "data": "derived_from", "title": "Derived From"  },
            { "data": "creation_method", "title": "Creation Method"  },
            { "data": "workflow_processing_step", "title": "Workflow Processing Step"  },
            { "data": "workflow_status", "title": "Workflow Status"  },
            { "data": "workflow_status_detail", "title": "Workflow Status Detail"  },
            { "data": "date_created", "title": "Date Created"  },
            { "data": "created_by_user_account_id", "title": "Created by User Account ID"  },
            { "data": "last_modified", "title": "Last Modified"  },
            { "data": "last_modified_user_account_id", "title": "Last Modified User Account ID"  }
          ],
          "dom": 'lfip<"datatables_bulk_actions"B>tip',
          buttons: [
            {
                extend: 'collection',
                text: 'Export Metadata',
                buttons: [
                    {
                        extend: 'csvHtml5',
                        filename: '{{subject_data.subject_name|e}}-{{dataset_data.capture_dataset_name|e}}-models_' + getFormattedDate(),
                        exportOptions: {
                            columns: ':not(:first-child)',
                            modifier: {
                                search: 'none'
                            }
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        filename: '{{subject_data.subject_name|e}}-{{dataset_data.capture_dataset_name|e}}-models_' + getFormattedDate(),
                        title: '',
                        exportOptions: {
                            columns: ':not(:first-child)',
                            modifier: {
                                search: 'none'
                            }
                        }
                    },
                    {
                        extend: 'copy',
                        title: '',
                        exportOptions: {
                            columns: ':not(:first-child)',
                            modifier: {
                                search: 'none'
                            }
                        }
                    },
                    // {
                    //     extend: 'print'
                    // },
                    // {
                    //     extend: 'pdfHtml5',
                    //     text: 'PDF',
                    //     orientation: 'landscape',
                    //     pageSize: 'TABLOID',
                    //     filename: '{{subject_data.subject_name|e}}-{{dataset_data.capture_dataset_name|e}}-models_' + getFormattedDate(),
                    // },
                ]
            },
            
            {
                extend: 'collection',
                text: 'Toggle Column Visibility',
                buttons: [ 'columnsToggle' ],
                postfixButtons: [ 'colvisRestore' ]
            }
          ],
          "pagingType": "simple_numbers",
          "stateSave": true,
          "order": [[6,"desc"]],
          // Show processing throbber.
          "processing": true,
          "serverMethod": "POST",
          // All data management will be done on the server side.
          "serverSide": true,
          // Path to the file that is going to handle the queries.
          "ajax": {
            "url": "/admin/projects/model/datatables_browse",
            "data": {
              "parent_id": capture_dataset_repository_id
            }
          },
          // Method type.
          "serverMethod": "POST",
          // Values in the length dropdown.
          "lengthMenu":[10,50,100,500],
          // Set some widths.
          "aoColumnDefs":[
            {
                "targets": [ 0 ],
                "sWidth": '106px',
                "bSortable": false
            },
            {
                "targets": [ 1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 ],
                "visible": false,
                "searchable": true
            }
          ],
          "fnRowCallback":function(nRow, aData, iDisplayIndex) {
            // This table row.
            var thisTableRow = $(nRow);
            // Create the delete record checkboxes.
            thisTableRow.find('td:eq(0)')
              .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
              .addClass("manage_column");
            // Add the class to the model download link.
            thisTableRow.find('td:eq(4)')
              .addClass("download");
            // Send to details page when clicked.
            thisTableRow.find('td').click(function() {
              // This table cell.
              var thisTableCell = $(this);
              // Don't do anything if the table cell has the 'manage_column' CSS class.
              if(thisTableCell.hasClass('manage_column')) return;
              // Don't do anything if the table cell has the 'download' CSS class.
              if(thisTableCell.hasClass('download')) return;
              // Send to the details page.
              var this_id = thisTableCell.closest("tr").attr('id');
              window.location.href = '/admin/projects/model/manage' + '/' + capture_dataset_repository_id + '/' + this_id;
            });
          }
        });
        var models_add_button = $('<a />')
          .addClass('btn btn-default add-record-button')
          .attr('href', '/admin/projects/model/manage/' + capture_dataset_repository_id)
          .html('<span class="glyphicon glyphicon-plus"></span> Add a Model');
        $('#browse_models_wrapper').find('.datatables_bulk_actions').prepend(models_add_button);
        // Hide the Export Metadata dropdown menu on menu item click.
        $('.datatables_bulk_actions').on('click', '.buttons-html5', function(){
            $(this).parent().hide();
        });

        $('#browse_uv_maps').dataTable( {
          "columns": [
            { "data": "manage" },
            { "data": "map_type" },
            { "data": "map_file_type" },
            { "data": "map_size" },
            { "data": "last_modified" }
          ],
          "dom": 'lfip<"datatables_bulk_actions">tip',
          "pagingType": "simple_numbers",
          "stateSave": true,
          "order": [[4,"desc"]],
          // Show processing throbber.
          "processing": true,
          "serverMethod": "POST",
          // All data management will be done on the server side.
          "serverSide": true,
          // Path to the file that is going to handle the queries.
          "ajax": {
            "url": "/admin/projects/uv_map/datatables_browse",
            "data": {
              "parent_id": capture_dataset_repository_id
            }
          },
          // Method type.
          "serverMethod": "POST",
          // Values in the length dropdown.
          "lengthMenu":[10,50,100,500],
          // Set some widths.
          "aoColumnDefs":[
            {"sWidth":"106px","aTargets":[0]},
            {"bSortable":false,"aTargets":[0]},
          ],
          "data": {
            "parent_id": capture_dataset_repository_id
          },
          "fnRowCallback":function(nRow, aData, iDisplayIndex) {

            // This table row.
            var thisTableRow = $(nRow);
            // Create the delete record checkboxes.
            thisTableRow.find('td:eq(0)')
              .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
              .addClass("manage_column");
            // Send to details page when clicked.
            thisTableRow.find('td').click(function() {
              // This table cell.
              var thisTableCell = $(this);
              // Don't do anything if the table cell has the 'manage_column' CSS class.
              if(thisTableCell.hasClass('manage_column')) return;
              // Send to the details page.
              var this_id = thisTableCell.closest("tr").attr('id');
              window.location.href = '/admin/projects/uv_map/manage/' + capture_dataset_repository_id + '/' + this_id;
            });
          }
        });
        var uv_maps_add_button = $('<a />')
          .addClass('btn btn-default add-record-button')
          .attr('href', '/admin/projects/uv_map/manage/' + capture_dataset_repository_id)
          .html('<span class="glyphicon glyphicon-plus"></span> Add a UV Map');
        $('#browse_uv_maps_wrapper').find('.datatables_bulk_actions').append(uv_maps_add_button);
        $('#browse_photogrammetry_scale_bars').dataTable( {
          "columns": [
            { "data": "manage" },
            { "data": "scale_bar_id" },
            { "data": "scale_bar_manufacturer" },
            { "data": "scale_bar_barcode_type" },
            { "data": "scale_bar_target_pairs" },
            { "data": "last_modified" }
          ],
          "dom": 'lfip<"datatables_bulk_actions">tip',
          "pagingType": "simple_numbers",
          "stateSave": true,
          "order": [[5,"desc"]],
          // Show processing throbber.
          "processing": true,
          "serverMethod": "POST",
          // All data management will be done on the server side.
          "serverSide": true,
          // Path to the file that is going to handle the queries.
          "ajax": {
            "url": "/admin/projects/photogrammetry_scale_bar/datatables_browse",
            "data": {
              "parent_id": capture_dataset_repository_id
            }
          },
          // Method type.
          "serverMethod": "POST",
          // Values in the length dropdown.
          "lengthMenu":[10,50,100,500],
          // Set some widths.
          "aoColumnDefs":[
            {"sWidth":"106px","aTargets":[0]},
            {"bSortable":false,"aTargets":[0]},
          ],
          "data": {
            "parent_id": capture_dataset_repository_id
          },
          "fnRowCallback":function(nRow, aData, iDisplayIndex) {

            // This table row.
            var thisTableRow = $(nRow);
            // Create the delete record checkboxes.
            thisTableRow.find('td:eq(0)')
              .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
              .addClass("manage_column");
            // Send to details page when clicked.
            thisTableRow.find('td').click(function() {
              // This table cell.
              var thisTableCell = $(this);
              // Don't do anything if the table cell has the 'manage_column' CSS class.
              if(thisTableCell.hasClass('manage_column')) return;
              // Send to the details page.
              var this_id = thisTableCell.closest("tr").attr('id');
              window.location.href = '/admin/projects/photogrammetry_scale_bar/manage/' + capture_dataset_repository_id + '/' + this_id;
            });
          }
        });
        var photogrammetry_scale_bars_add_button = $('<a />')
          .addClass('btn btn-default add-record-button')
          .attr('href', '/admin/projects/photogrammetry_scale_bar/manage/' + capture_dataset_repository_id)
          .html('<span class="glyphicon glyphicon-plus"></span> Add a Photogrammetry Scale Bar');
        $('#browse_photogrammetry_scale_bars_wrapper').find('.datatables_bulk_actions').append(photogrammetry_scale_bars_add_button);
      });
    </script>
{% endblock %}