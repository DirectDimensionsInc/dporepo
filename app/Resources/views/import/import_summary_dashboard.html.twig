{% extends 'default_bootstrap_admin.html.twig' %}

{% block stylesheets %}
  {{ parent() }}
  <link href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" rel="stylesheet" type="text/css" />
  <link href="https://cdn.datatables.net/buttons/1.5.1/css/buttons.bootstrap.min.css" rel="stylesheet" type="text/css" />
  <link href="{{ asset('bundles/lifotypeahead/css/typeaheadbundle.css') }}" rel="stylesheet" type="text/css" />
{% endblock %}

{% block content %}

  <ol class="breadcrumb">
    <li><a href="/admin">Dashboard</a></li>
    <li class="active">Uploads</li>
  </ol>

  <div class="row">
    <div class="col-sm-12 col-md-12">

      <ul class="nav nav-tabs" id="uploadsTabs" role="tablist">
        <li role="presentation">
          <a href="#browseUploads" id="browse-tab" role="tab" data-toggle="tab" aria-controls="browse" aria-expanded="true">Browse Imports</a>
        </li>
        <li role="presentation" class="active">
          <a href="#upload" role="tab" id="upload-tab" data-toggle="tab" aria-controls="upload">New Upload</a>
        </li>
      </ul>

      <div class="tab-content" id="uploadsTabContent" style="padding-top: 3rem;">

        <div class="tab-pane fade" role="tabpanel" id="browseUploads" aria-labelledby="browse-tab">
          <table id="browse" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
              <tr>
                <th class="text-center">Project</th>
                <th class="text-center">Date Uploaded</th>
                <th class="text-center">Items</th>
                <th class="text-center">Uploaded By</th>
                <th class="text-center">Status</th>
              </tr>
            </thead>
          </table>
        </div>

        <div class="tab-pane fade in active" role="tabpanel" id="upload" aria-labelledby="upload-tab">

          <div class="row">
            <div class="col-sm-6 col-md-6">
              <!-- Typeahead form element -->
              {{ form_start(form) }}
              <h3>Choose a Parent Record</h3>
              {{ form_row(form.parent_picker) }}
              {{ form_end(form) }}
            </div>
          </div>

          <div class="row">
            <!-- column 1 -->
            <div class="col-sm-6 col-md-6">
              <!-- File Drag and Drop zone -->
              <div class="panel panel-default panel-uploads" data-set-number="1" data-file-count="0">
                <!-- Panel contents -->
                <div class="panel-heading">Set 1: Uploads</div>
                <!-- List group -->
                <ul class="list-group drop-zone" ondrop="dropHandler(event);" ondragover="dragOverHandler(event);">
                  <li class="list-group-item drop-zone-empty">Drag and drop files onto this window to upload.</li>
                </ul>
              </div>
              <a href="javascript:void(0);" class="btn btn-default" role="button"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add Another Set</a>
              <a href="javascript:void(0);" class="btn btn-default pull-right" role="button"><span class="glyphicon glyphicon-cog" aria-hidden="true"></span> Pre-Validate Set 1 Scans and CSV Files</a>
            </div>
            <!-- column 2 -->
            <div class="col-sm-6 col-md-6">
              <div class="panel panel-default panel-validation-results">
                <!-- Panel contents -->
                <div class="panel-heading">Set 1: Pre-Validation Results</div>
                <div class="panel-body">
                  
                </div>
              </div>
            </div>
          </div>

        </div>

      </div>

    </div>
  </div>

{% endblock %}

{% block js_bottom %}
  {{ parent() }}
  <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
  <script src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.bootstrap.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.colVis.min.js"></script>
  <script src="{{ asset('bundles/lifotypeahead/js/bootstrap-typeahead.js') }}"></script>
  <script src="{{ asset('bundles/lifotypeahead/js/typeaheadbundle.js') }}"></script>
  <script type="text/javascript">
    $(document).ready(function() {
      var details_page = "/admin/projects/subjects/";
      
      $('#browse').dataTable({
        "columns": [
          { "data": "project_name",
            "render": function (data, type, row, meta) {
                return "<a href='/admin/projects/subjects/" + row.project_repository_id + "'>" + row.project_name + "</a>";
            }
          },
          { "data": "date_created" },
          { "data": "items_total" ,
            "render": function (data, type, row, meta) {
                return "<a href='/admin/import/" + row.job_id + "'>" + row.items_total + "</a>";
            }
          },
          { "data": "username" },
          { "data": "job_status" }
        ],
        //"dom": 'lfip<"datatables_bulk_actions">tip',
        "pagingType": "simple_numbers",
        "stateSave": true,
        "order": [[0,"desc"]],
        // Show processing throbber.
        "processing": true,
        // All data management will be done on the server side.
        "serverSide": true,
        // Path to the file that is going to handle the queries.
        "ajax": "/admin/import/datatables_browse_imports",
        // Method type.
        "serverMethod": "POST",
        // Values in the length dropdown.
        "lengthMenu":[10,50,100,500],
        "columnDefs":[
          {"sWidth":"425px","aTargets":[0]},
          {"bSortable":false,"aTargets":[0,4]}
        ],
      });
    });

    // Testing drag/drop handlers. Stolen from:
    // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop
    // https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry
    function dragOverHandler(ev) {
      // Prevent default behavior (Prevent file from being opened)
      ev.preventDefault();
      // Remove the placeholder list item.
      $('.drop-zone-empty').remove();
      $('.panel-uploads, .drop-zone').attr('style', 'background-color: #eeeeee;');
    }

    function dropHandler(ev) {
      // Prevent default behavior (Prevent file from being opened)
      ev.preventDefault();

      if (ev.dataTransfer.items) {
        // Count of any existing files.
        let existingCount = $('.panel-uploads').data('file-count'),
            // Count of new files being dropped.
            thisCount = ev.dataTransfer.items.length,
            // Total count.
            thisTotalCount = (thisCount + existingCount);

        // Add the total count to the file-count data attribute.
        $('.panel-uploads').data('file-count', thisTotalCount);

        // Use DataTransferItemList interface to access the file(s)
        for (var i = 0; i < ev.dataTransfer.items.length; i++) {
          // Get the item's properties via webkitGetAsEntry().
          let item = ev.dataTransfer.items[i].webkitGetAsEntry(),
              listing = $('.drop-zone');
          // // Add the file size and modified date to 'item'.
          // item.detail = ev.dataTransfer.files[i];
          // Recursively scan files and add to the DOM.
          scanFiles(i, item, listing, existingCount);
        }
      }
      
      // Pass event to removeDragData for cleanup
      removeDragData(ev);
    }

    function scanFiles(i, item, container, existingCount) {

      // console.log(item);

      let itemIcon = item.isDirectory ? 'folder-close' : 'file',
          spanIcon = $('<span />').addClass('glyphicon glyphicon-' + itemIcon).attr('style', 'margin-right: 4px;'),
          allItemsCount = $('.drop-zone').find('li.list-group-item').length,
          thisCount = item.isDirectory ? (i+allItemsCount) : i,
          listItem = $('<li />').addClass('list-group-item').attr('data-count', thisCount).text(item.name);
          // listItem = $('<li />').addClass('list-group-item').attr('data-count', i).text(item.name + ' | File Type: ' + item.detail.type  + ' | File Size: ' + item.detail.size + ' | Last Modified: ' + item.detail.lastModified + '');

      listItem.prepend(spanIcon);
      container.append(listItem);
      
      // Directory handler
      if (item.isDirectory) {
        let directoryReader = item.createReader();
        let directoryContainer = $('<ul />');
        container.append(directoryContainer);
        
        directoryReader.readEntries(function(entries) {
            entries.forEach(function(entry) {
              scanFiles(i++, entry, directoryContainer, existingCount);
          });
        });
      }

    }

    function removeDragData(ev) {
      if (ev.dataTransfer.items) {
        // Use DataTransferItemList interface to remove the drag data
        ev.dataTransfer.items.clear();
      } else {
        // Use DataTransfer interface to remove the drag data
        ev.dataTransfer.clearData();
      }
      $('.panel-uploads, .drop-zone').attr('style', 'background-color: none;');
    }
  </script>
{% endblock %}