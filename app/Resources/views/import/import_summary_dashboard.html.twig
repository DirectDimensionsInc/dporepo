{% extends 'default_bootstrap_admin.html.twig' %}

{% block stylesheets %}
  {{ parent() }}
  <link href="https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap.min.css" rel="stylesheet" type="text/css" />
  <link href="https://cdn.datatables.net/buttons/1.5.1/css/buttons.bootstrap.min.css" rel="stylesheet" type="text/css" />
  <link href="{{ asset('bundles/lifotypeahead/css/typeaheadbundle.css') }}" rel="stylesheet" type="text/css" />
{% endblock %}

{% block content %}

  <ol class="breadcrumb">
    <li><a href="/admin">Dashboard</a></li>
    <li class="active">Uploads</li>
  </ol>

  <div class="row">
    <div class="col-sm-12 col-md-12">

      <ul class="nav nav-tabs" id="uploadsTabs" role="tablist">
        <li role="presentation">
          <a href="#browseUploads" id="browse-tab" role="tab" data-toggle="tab" aria-controls="browse" aria-expanded="true">Browse Imports</a>
        </li>
        <li role="presentation" class="active">
          <a href="#upload" role="tab" id="upload-tab" data-toggle="tab" aria-controls="upload">New Upload</a>
        </li>
      </ul>

      <div class="tab-content" id="uploadsTabContent" style="padding-top: 3rem;">

        <div class="tab-pane fade" role="tabpanel" id="browseUploads" aria-labelledby="browse-tab">
          <table id="browse" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
              <tr>
                <th class="text-center">Project</th>
                <th class="text-center">Date Uploaded</th>
                <th class="text-center">Items</th>
                <th class="text-center">Uploaded By</th>
                <th class="text-center">Status</th>
              </tr>
            </thead>
          </table>
        </div>

        <div class="tab-pane fade in active" role="tabpanel" id="upload" aria-labelledby="upload-tab">

          <!-- Typeahead form element -->
          {{ form_start(form) }}
          {{ form_row(form.parent_picker) }}
          {{ form_end(form) }}

          <div class="panel panel-default" style="margin-top: 2rem;">
            <!-- Panel contents -->
            <div class="panel-heading">Drag/Drop Zone</div>
            <!-- List group -->
            <ul id="drop-zone" ondrop="dropHandler(event);" ondragover="dragOverHandler(event);" class="list-group" style="min-height: 20rem;">
            </ul>
          </div>
        </div>

      </div>

    </div>
  </div>

{% endblock %}

{% block js_bottom %}
  {{ parent() }}
  <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
  <script src="https://cdn.datatables.net/1.10.16/js/dataTables.bootstrap.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.bootstrap.min.js"></script>
  <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.colVis.min.js"></script>
  <script src="{{ asset('bundles/lifotypeahead/js/bootstrap-typeahead.js') }}"></script>
  <script src="{{ asset('bundles/lifotypeahead/js/typeaheadbundle.js') }}"></script>
  <script type="text/javascript">
    $(document).ready(function() {
      var details_page = "/admin/projects/subjects/";
      
      $('#browse').dataTable({
        "columns": [
          { "data": "project_name",
            "render": function (data, type, row, meta) {
                return "<a href='/admin/projects/subjects/" + row.project_repository_id + "'>" + row.project_name + "</a>";
            }
          },
          { "data": "date_created" },
          { "data": "items_total" ,
            "render": function (data, type, row, meta) {
                return "<a href='/admin/import/" + row.job_id + "'>" + row.items_total + "</a>";
            }
          },
          { "data": "username" },
          { "data": "job_status" }
        ],
        //"dom": 'lfip<"datatables_bulk_actions">tip',
        "pagingType": "simple_numbers",
        "stateSave": true,
        "order": [[0,"desc"]],
        // Show processing throbber.
        "processing": true,
        // All data management will be done on the server side.
        "serverSide": true,
        // Path to the file that is going to handle the queries.
        "ajax": "/admin/import/datatables_browse_imports",
        // Method type.
        "serverMethod": "POST",
        // Values in the length dropdown.
        "lengthMenu":[10,50,100,500],
        "columnDefs":[
          {"sWidth":"425px","aTargets":[0]},
          {"bSortable":false,"aTargets":[0,4]}
        ],
      });
    });

    // Testing drag/drop handlers. Stolen from:
    // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop
    function dropHandler(ev) {
      console.log('File(s) dropped');

      // Prevent default behavior (Prevent file from being opened)
      ev.preventDefault();

      if (ev.dataTransfer.items) {
        // Use DataTransferItemList interface to access the file(s)
        for (var i = 0; i < ev.dataTransfer.items.length; i++) {
          // If dropped items aren't files, reject them
          if (ev.dataTransfer.items[i].kind === 'file') {
            var file = ev.dataTransfer.items[i].getAsFile();
            console.log('... file[' + i + '].name = ' + file.name);
            var listItem = '<li class="list-group-item">' + 'File #' + i + ': ' + file.name + '</li>';
            jQuery('#drop-zone').append(listItem);
          }
        }
      } else {
        // Use DataTransfer interface to access the file(s)
        for (var i = 0; i < ev.dataTransfer.files.length; i++) {
          console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);
        }
      } 
      
      // Pass event to removeDragData for cleanup
      removeDragData(ev);
    }

    function dragOverHandler(ev) {
      console.log('File(s) in drop zone'); 
      // Prevent default behavior (Prevent file from being opened)
      ev.preventDefault();
    }

    function removeDragData(ev) {
      console.log('Removing drag data')
      if (ev.dataTransfer.items) {
        // Use DataTransferItemList interface to remove the drag data
        ev.dataTransfer.items.clear();
      } else {
        // Use DataTransfer interface to remove the drag data
        ev.dataTransfer.clearData();
      }
    }
  </script>
{% endblock %}