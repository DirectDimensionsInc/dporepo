{% extends 'default_bootstrap_admin.html.twig' %}

{% block stylesheets %}
  {{ parent() }}
  <link href="{{ asset('lib/javascripts/datatables/css/dataTables.bootstrap.min.css') }}" rel="stylesheet" type="text/css" />
  <link href="{{ asset('lib/javascripts/buttons/css/buttons.bootstrap.min.css') }}" rel="stylesheet" type="text/css" />
{% endblock %}

{% block content %}

  <ol class="breadcrumb">
    <li><a href="/admin">Dashboard</a></li>
    <li><a href="/admin/workspace">Browse Projects</a></li>
    {%  if project_id is defined %}
        <li><strong>Project:</strong> <a href="/admin/project/view/{{ project_id }}">{{ project_data.project_name|e }}</a></li>
    {% endif %}
    <li class="active"><strong>Item:</strong> {{ item_data.item_description_truncated|e }}</li>
  </ol>

  <div class="row">
    <div class="col-sm-6 col-md-6">
      <dl class="dl-horizontal">
        <dt>Subject</dt>
        <dd><a href="/admin/subject/view/{{ subject_id }}">{{ subject_data.subject_name|e }}</a></dd>
        <dt>Item GUID</dt>
        <dd>{{ item_data.item_guid|e }}</dd>
        <dt>Local Item ID</dt>
        <dd>{{ item_data.local_item_id|e|nl2br }}</dd>
      </dl>
    </div>
    <div class="col-sm-6 col-md-6">
      <dl class="dl-horizontal">
        <dt>Last Modified</dt>
        <dd>{{ item_data.last_modified|e }}</dd>
        <dt>Item Type</dt>
        <dd>{{ item_data.item_type_label|e }}</dd>
      </dl>
    </div>
    <div class="col-sm-12 col-md-12">
      <dl class="dl-horizontal">
        <dt>Item Description</dt>
        <dd>{{ item_data.item_description|e|nl2br }}</dd>
      </dl>
      {%  if project_id is defined %}
        <a href="/admin/project/view/{{ project_id }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span> Back to Project</a>
      {% endif %}
      <a href="/admin/item/manage/{{ item_id }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edit Item</a>

    {% if item_data.thumb_3d is defined %}
        <a href="/admin/model/viewer/{{item_data.thumb_3d.model_id}}" class="btn btn-primary" role="button">Preview 3D thumbnail</a>
    {% endif %}
    {% if item_data.master_model is defined %}
      <a href="/lib/javascripts/voyager-tools/voyager-story-dev.html?item=admin/get_file?path={{item_data.master_model.model_files.0.file_path}}&referrer=" class="btn btn-primary" role="button">Author content</a>
    {% endif %}


    </div>

    <div class="col-sm-12 col-md-12 child-data">
      <div class="panel panel-default">
        <div class="panel-body">

          <h2>Capture Datasets</h2>
          <a href="/admin/capture_dataset/add/{{ item_id }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add a Capture Dataset</a>
          <input type="hidden" id="delete-path" value="admin/capture_dataset/delete/{{ item_id }}" />

          <table id="browse" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
              <tr>
                <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                <th class="text-center">Download</th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>

                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                  <th class="text-center"></th>
                <th class="text-center"></th>
              </tr>
            </thead>
          </table>

        </div>
      </div>
    </div>

    <div class="col-sm-12 col-md-12 child-data">
      <div class="panel panel-default">
        <div class="panel-body">
          <h2>Models</h2>
          <input type="hidden" id="delete-path" value="admin/model/delete" />
          <table id="browse_models" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
              <tr>
                <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                <th class="text-center">Download</th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
              </tr>
            </thead>
          </table>
        </div>
      </div>
    </div>

    <div class="col-sm-12 col-md-12 child-data">
      <div class="panel panel-default">
        <div class="panel-body">
          <h2>Workflows</h2>
          <table id="browse_workflows" class="table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
              <tr>
                <th style="padding-left: 8px;"><input class="remove-records-checkbox" type="checkbox"> Remove?</th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
                <th class="text-center"></th>
              </tr>
            </thead>
          </table>
        </div>
      </div>
    </div>

  </div> <!-- /row -->
{% endblock %}
{% block js_bottom %}
  {{ parent() }}

  <script src="{{ asset('lib/javascripts/datatables/js/jquery.dataTables.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/datatables/js/dataTables.buttons.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/datatables/js/dataTables.bootstrap.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/buttons/js/buttons.bootstrap.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/buttons/js/buttons.colVis.min.js') }}"></script>
  <!-- The following Javascript is needed for download CSV, download Excel, and print capabilities -->
  <script src="{{ asset('lib/javascripts/buttons/js/buttons.flash.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/datatables/js/jszip.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/pdfmake/js/pdfmake.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/pdfmake/js/vfs_fonts.js') }}"></script>
  <script src="{{ asset('lib/javascripts/buttons/js/buttons.html5.min.js') }}"></script>
  <script src="{{ asset('lib/javascripts/buttons/js/buttons.print.min.js') }}"></script>
  <script type="text/javascript">
    $(document).ready(function() {

      var project_id = "{{ project_id }}",
          subject_id = "{{ subject_id }}",
          item_id = "{{ item_id }}",
          details_page = "/admin/capture_dataset/view/";

      $("#browse").dataTable({
        "columns": [
          { "data": "manage" },
          { "data": "manage" },
          { "data": "capture_dataset_guid", "title": "Capture Dataset Guid" },
          { "data": "capture_dataset_field_id", "title": "Capture Dataset Field ID" },
          { "data": "capture_method", "title": "Capture Method" },
          { "data": "capture_dataset_type", "title": "Capture Dataset Type" },
          { "data": "capture_dataset_name", "title": "Capture Dataset Name" },
          { "data": "collected_by", "title": "Collected By" },
          { "data": "date_of_capture", "title": "Date of Capture" },
          { "data": "capture_dataset_description", "title": "Capture Dataset Description" },
          { "data": "collection_notes", "title": "Collection Notes" },
          { "data": "support_equipment", "title": "Support Equipment" },
          { "data": "item_position_type", "title": "Item Position Type" },
          { "data": "item_position_field_id", "title": "Item Position Field ID" },
          { "data": "item_arrangement_field_id", "title": "Item Arrangement Field ID" },
          { "data": "positionally_matched_capture_datasets", "title": "Positionally Matched Capture Datasets" },
          { "data": "focus_type", "title": "Focus Type" },
          { "data": "light_source_type", "title": "Light Source Type" },
          { "data": "background_removal_method", "title": "Background Removal Method" },
          { "data": "cluster_type", "title": "Cluster Type" },
          { "data": "cluster_geometry_field_id", "title": "Cluster Geometry Field ID" },
          { "data": "resource_capture_datasets", "title": "Resource Capture Datasets" },
          { "data": "calibration_object_used", "title": "Calibration Object Used" },
          { "data": "date_created", "title": "Date Created" },
          { "data": "workflow_processing_step", "title": "Processing Step" },
          { "data": "workflow_status", "title": "Processing Status" },
          { "data": "workflow_status_detail", "title": "Processing Detail" },
          { "data": "exif_filename", "title": "EXIF Filename" },
          { "data": "exif_file_size", "title": "EXIF File Size" },
          { "data": "exif_file_timestamp", "title": "EXIF FileTimestamp" },
          { "data": "exif_height", "title": "EXIF Height" },
          { "data": "exif_width", "title": "EXIF Width" },
          { "data": "exif_aperture", "title": "EXIF Aperture" },
          { "data": "exif_camera_make", "title": "EXIF Camera Make" },
          { "data": "exif_camera_model", "title": "EXIF Camera Model" },
          { "data": "exif_timestamp", "title": "EXIF Timestamp" },
          { "data": "exif_original_timestamp", "title": "EXIF Original Timestamp" },
          { "data": "exif_digitized_timestamp", "title": "EXIF Digitized Timestamp" },
          { "data": "exif_exposure", "title": "EXIF Exposure" },
          { "data": "exif_focal_length", "title": "EXIF Focal Length" },
          { "data": "exif_iso_speed", "title": "EXIF ISO Speed" },
          { "data": "exif_camera_serial", "title": "EXIF Camera Serial" },
          { "data": "exif_lens_model", "title": "EXIF Lens Model" },
          { "data": "exif_lens_serial", "title": "EXIF Lens Serial" },
          { "data": "last_modified", "title": "Last Modified" },
          { "data": "file_path", "title": "Preview",
          "render": function ( data, type, row, meta ) {
              //@todo use a class instead of hard-coded width
              if(data) {
                return '<img src="/admin/get_file?path=' + data + '" width="120px" />';
              }
              else {
                return '';
              }
            }
          }
        ],
        // "dom": 'Bfrtipt',
        "dom": 'lfip<"datatables_bulk_actions"B>tip',
        "pagingType": "simple_numbers",
        "stateSave": true,
        "order": [[24,"desc"]],
        // Show processing throbber.
        "processing": true,
        "serverMethod": "POST",
        // All data management will be done on the server side.
        "serverSide": true,
        // Path to the file that is going to handle the queries.
        "ajax": "/admin/datatables_browse_datasets/{{ item_id }}",
        // Method type.
        "serverMethod": "POST",
        // Values in the length dropdown.
        "lengthMenu":[10,50,100,500],
        // Set some widths.
        "columnDefs":[
          {"sWidth":"106px","aTargets":[0, 1]},
          {"bSortable":false,"aTargets":[0, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]},
          {
            "targets": [ 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 ],
            "visible": false,
            "searchable": true
          },
          {
            "targets": [ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 ],
            "visible": false,
            "searchable": false
          }
        ],
        buttons: [
          {
            extend: 'colvis',
            // collectionLayout: 'fixed two-column',
            postfixButtons: [ 'colvisRestore' ]
          }
        ],
        "fnRowCallback":function(nRow, aData, iDisplayIndex) {

          // This table row.
          var thisTableRow = $(nRow);

          // Create the delete record checkboxes.
          thisTableRow.find('td:eq(0)')
            .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
            .addClass("manage_column");

          // Create the download checkboxes.
          thisTableRow.find('td:eq(1)')
            .html("<input type='checkbox' name='download_checkbox' value='" + aData['manage'] + "' />")
            .addClass("manage_column");

          // Send to details page when clicked.
          thisTableRow.find('td').click(function() {
            // This table cell.
            var thisTableCell = $(this);
            // Don't do anything if the table cell has the 'manage_column' CSS class.
            if(thisTableCell.hasClass('manage_column')) return;
            // Send to the details page.
            var capture_dataset_id = thisTableCell.closest("tr").attr('id');
            window.location.href = details_page + capture_dataset_id;
          });

        }
      });

      var request_download_button = $('<button></button>')
        .addClass('btn btn-default glyphicon glyphicon-download-alt')
        .attr('style', 'width: 13.8rem;')
        .attr('id', 'request-download-button')
        .on('click', function(){

          var download_ids = new Array;
          $('#browse [name="download_checkbox"]:checked').each(function(){
            download_ids.push($(this).val());
          });

          if(!download_ids.length) {
            swal('No Records Selected', 'Please choose at least one record.');
            return;
          }

          if(download_ids.length > 0) {

            swal({
              title: "Send Download Request",
              text: "Send a request to download chosen assets?",
              type: "warning",
              showCancelButton: true,
              confirmButtonColor: "#DD6B55",
              confirmButtonText: "Send Request",
              closeOnConfirm: true
            },
            function(){
              // Placeholder
            });

          }
      });

      $("#browse_wrapper").find(".datatables_bulk_actions").prepend(request_download_button);


      $('#browse_models').dataTable( {
        "columns": [
          { "data": "manage" },
          { "data": "manage" },
          { "data": "model_id",
            "title": "Preview",
            "render": function(data, type, row, meta){
              if(row.model_id_delivery_web){
                data = '<a class="btn btn-primary" href="/admin/model/viewer/' + row.model_id_delivery_web + '" target="_blank">Preview</a>';
              }
              else {
                data = '';
              }
              return data;
            }
          },
          { "data": "model_purpose", "title": "Model Purpose"  },
          { "data": "model_file_type", "title": "Model File Type"  },
          { "data": "model_id", "title": "Model Repository ID"  },
          { "data": "item_id", "title": "Parent Item Repository ID"  },
          { "data": "count_capture_datasets", "title": "Datasets Count"  },
          { "data": "model_guid", "title": "Model Guid"  },
          { "data": "date_of_creation", "title": "Date of Creation"  },            
          { "data": "model_modality", "title": "Model Modality"  },
          { "data": "units", "title": "Units"  },
          { "data": "is_watertight", "title": "Is Watertight"  },
          { "data": "point_count", "title": "Point Count"  },
          { "data": "has_normals", "title": "Has Normals"  },
          { "data": "face_count", "title": "Face Count"  },
          { "data": "vertices_count", "title": "Vertices Count"  },
          { "data": "has_vertex_color", "title": "Has Vertex Color"  },
          { "data": "has_uv_space", "title": "Has UV Space"  },
          { "data": "model_maps", "title": "Model Maps"  },
          { "data": "derived_from", "title": "Derived From"  },
          { "data": "creation_method", "title": "Creation Method"  },
          { "data": "date_created", "title": "Date Created"  },
          { "data": "created_by_user_account_id", "title": "Created by User Account ID"  },
          { "data": "last_modified", "title": "Last Modified"  },
          { "data": "last_modified_user_account_id", "title": "Last Modified User Account ID"  }
        ],
        "dom": 'lfip<"datatables_bulk_actions"B>tip',
        buttons: [
          'csv', 'excel', 'pdf', 'print',
          {
              extend: 'colvis',
              postfixButtons: [ 'colvisRestore' ]
          }
        ],
        "pagingType": "simple_numbers",
        "stateSave": true,
        "order": [[6,"desc"]],
        // Show processing throbber.
        "processing": true,
        "serverMethod": "POST",
        // All data management will be done on the server side.
        "serverSide": true,
        // Path to the file that is going to handle the queries.
        "ajax": {
          "url": "/admin/datatables_browse_models",
          "data": {
            "parent_id": item_id,
            "parent_type": 'item_id'
          }
        },
        // Method type.
        "serverMethod": "POST",
        // Values in the length dropdown.
        "lengthMenu":[10,50,100,500],
        // Set some widths.
        "aoColumnDefs":[
          {
              "targets": [ 0 ],
              "sWidth": '106px',
              "bSortable": false
          },
          {
              "targets": [ 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 ],
              "visible": false,
              "searchable": true
          }
        ],
        "fnRowCallback":function(nRow, aData, iDisplayIndex) {
          
          // This table row.
          var thisTableRow = $(nRow);

          // Create the delete record checkboxes.
          thisTableRow.find('td:eq(0)')
            .html("<input type='checkbox' name='manage_checkbox' value='" + aData['manage'] + "' />")
            .addClass("manage_column");
          // Create the download checkboxes.
          thisTableRow.find('td:eq(1)')
            .html("<input type='checkbox' name='download_checkbox' value='" + aData['manage'] + "' />")
            .addClass("download");
          // Add a class to the table cell containing the "Preview" button.
          thisTableRow.find('td:eq(2)').addClass('js-preview');

          // Send to details page when clicked.
          thisTableRow.find('td').click(function() {
            // This table cell.
            var thisTableCell = $(this);
            // Don't do anything if the table cell has the 'manage_column' CSS class.
            if(thisTableCell.hasClass('manage_column')) return;
            // Don't do anything if the table cell has the 'download' CSS class.
            if(thisTableCell.hasClass('download')) return;
            // Don't do anything if the table cell has the 'js-preview' CSS class.
            if(thisTableCell.hasClass('js-preview')) return;
            // Send to the details page.
            var this_id = thisTableCell.closest("tr").attr('id');
            window.location.href = '/admin/model/view/' + this_id;
          });

        }
      });

      var models_add_button = $('<a />')
        .addClass('btn btn-default add-record-button')
        .attr('href', '/admin/model/add/' + item_id + '?parent_type=item_id')
        .html('<span class="glyphicon glyphicon-plus"></span> Add a Model');
      $('#browse_models_wrapper').find('.datatables_bulk_actions').prepend(models_add_button);

      var request_model_download_button = $('<button></button>')
        .addClass('btn btn-default glyphicon glyphicon-download-alt')
        .attr('style', 'width: 13.8rem;')
        .attr('id', 'request-download-button')
        .on('click', function(){

          var download_ids = new Array;
          $('#browse [name="download_checkbox"]:checked').each(function(){
            download_ids.push($(this).val());
          });

          if(!download_ids.length) {
            swal('No Records Selected', 'Please choose at least one record.');
            return;
          }

          if(download_ids.length > 0) {

            swal({
                title: "Send Download Request",
                text: "Send a request to download chosen assets?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Send Request",
                closeOnConfirm: true
              },
              function(){
                // Placeholder
              });

          }
        });

      $("#browse_models_wrapper").find(".datatables_bulk_actions").prepend(request_model_download_button);

      // Browse Workflows
      $('#browse_workflows').dataTable( {
        "columns": [
          { "data": "workflow_id"},
          { "data": "workflow_recipe_name", "title": "Recipe Name"  },
          { "data": "step_id", "title": "Step ID"  },
          { "data": "step_type", "title": "Step Type"  },
          { "data": "step_state", "title": "Step State"  },
          { "data": "processing_job_id", "title": "Processing Job ID"  },
          { "data": "date_created", "title": "Date Created"  },
          { "data": "created_by_user_account_id", "title": "Created by User Account ID"  },
          { "data": "last_modified", "title": "Last Modified"  },
          { "data": "last_modified_user_account_id", "title": "Last Modified User Account ID"  }
        ],
        "dom": 'lfip<"datatables_bulk_actions">tip',
        "pagingType": "simple_numbers",
        "stateSave": true,
        "order": [[6,"desc"]],
        // Show processing throbber.
        "processing": true,
        "serverMethod": "POST",
        // All data management will be done on the server side.
        "serverSide": true,
        // Path to the file that is going to handle the queries.
        "ajax": {
          "url": "/admin/datatables_browse_workflows",
          "data": {
            "item_id": item_id
          }
        },
        // Method type.
        "serverMethod": "POST",
        // Values in the length dropdown.
        "lengthMenu":[10,50,100,500],
        // Set some widths.
        "aoColumnDefs":[
          // {
          //     "targets": [ 0 ],
          //     "sWidth": '106px',
          //     "bSortable": false
          // }
        ],
        "fnRowCallback":function(nRow, aData, iDisplayIndex) {
          
          // This table row.
          var thisTableRow = $(nRow);

          // Send to details page when clicked.
          thisTableRow.find('td').click(function() {
            // This table cell.
            var thisTableCell = $(this);
            // Send to the details page.
            var this_id = thisTableCell.closest("tr").attr('id');
            window.location.href = '/admin/workflow/' + this_id;
          });

        }
      });

    });
  </script>
{% endblock %}
