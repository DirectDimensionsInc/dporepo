{% extends 'default_bootstrap_admin.html.twig' %}

{% block stylesheets %}
  {{ parent() }}
  <link href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" rel="stylesheet" type="text/css">
{% endblock %}

{% block content %}

  <div class="row">
    <div class="col-sm-12 col-md-12">
      <div class="form-group">
        <a href="{{ app.request.headers.get('referer')|default('/admin/workspace/') }}" class="btn btn-default" role="button"><span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span> Back</a>
      </div>
    </div>
  </div>

  {{ form_start(form) }} {# , {'attr': {'novalidate': 'novalidate'}} #}

    <div class="row">
      <div class="col-sm-6 col-md-6">
        {{ form_row(form.capture_method) }}
        {{ form_row(form.capture_dataset_type) }}
        {{ form_row(form.capture_dataset_name) }}
        {{ form_row(form.collected_by) }}
        {{ form_row(form.date_of_capture) }}
        {{ form_row(form.capture_dataset_description) }}
        {{ form_row(form.collection_notes) }}
        {{ form_row(form.item_position_type) }}
      </div>
      <div class="col-sm-6 col-md-6">
        {{ form_row(form.positionally_matched_capture_datasets) }}
        {{ form_row(form.focus_type) }}
        {{ form_row(form.light_source_type) }}
        {{ form_row(form.background_removal_method) }}
        {{ form_row(form.cluster_type) }}
        {{ form_row(form.cluster_geometry_field_id) }}
        {{ form_row(form.capture_dataset_guid) }}
        {{ form_row(form.capture_dataset_field_id) }}
        {{ form_row(form.support_equipment) }}
        {{ form_row(form.item_position_field_id) }}
        {{ form_row(form.item_arrangement_field_id) }}
        {{ form_row(form.resource_capture_datasets) }}
        {{ form_row(form.calibration_object_used) }}
        {{ form_row(form.directory_path) }}
      </div>
    </div>

    <div class="row">
      <div class="col-sm-12 col-md-12">
        <div class="field-group" style="clear:both;">
          {{ form_row(form.save) }}
        </div>
      </div>
    </div>

  {{ form_end(form) }}

  <div class="row">
    <div class="col-sm-6 col-md-6">
      {% if dataset_data.directory_path is defined and dataset_data.directory_path %}
      <hr>
      <h4>Uploaded Files</h4>
      <form action="/admin/get_uploaded_files" method="POST" class="dropzone" id="my-dropzone">
        <div class="table table-striped files" id="previews">
          <ul class="directory-structure" style="padding-left: 0;">
          </ul>
        </div>
      </form>
      {% endif %}
    </div>
  </div>

{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script src="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/js/bootstrap-datepicker.min.js"></script>
  <script type="text/javascript" src="{{ asset('lib/javascripts/dropzone.js') }}"></script>
  <script type="text/javascript">
    function scanFiles(i, item, container, dzOptions, existingCount) {

      // Ignore hidden files if Dropzone's 'ignoreHiddenFiles' option is set to true.
      if (dzOptions.ignoreHiddenFiles && item.name.substring(0, 1) === '.') {
        return;
      }

      let itemIcon = item.isDirectory ? 'folder-close' : 'file',
          spanIcon = $('<span />').addClass('glyphicon glyphicon-' + itemIcon).attr('style', 'margin-right: 4px;'),
          allItemsCount = $('#previews').find('li.list-group-item').length,
          thisCount = (allItemsCount+1),
          listItem = $('<li />')
              .addClass('list-group-item')
              .attr('data-count', thisCount)
              .attr('data-file-name', item.name)
              .attr('style', 'border-left: none; border-right: none; border-top-left-radius: 0; border-top-right-radius: 0;')
              .html('<a href="' + item.url + '" download="' + item.name + '">' + item.name + '</a>');

      // Add elements to the list item.
      listItem.prepend(spanIcon);
      // Add the list item to the container.
      container.append(listItem);
      
      // // Directory handler
      // if (item.isDirectory) {
      //   // let directoryReader = item.createReader();
      //   let directoryContainer = $('<ul />').attr('style', 'padding-left: 15px;').attr('data-file-name', item.name);
      //   // Add an unordered list to serve as the directory container.
      //   container.append(directoryContainer);
      //   // // Read file entries within a directory.
      //   // directoryReader.readEntries(function(entries) {
      //   //     entries.forEach(function(entry) {
      //   //       scanFiles(i++, entry, directoryContainer, dzOptions, existingCount);
      //   //   });
      //   // });
      // }

    }
  </script>
  <script type="text/javascript">
    // Datepicker
    $(document).ready(function(){

      var capture_dataset_repository_id =  "{{ dataset_data.capture_dataset_repository_id }}",
          directory_path = "{{ dataset_data.directory_path }}",
          reader = new FileReader();

      // Build-out the listing of uploaded files.
      Dropzone.options.myDropzone = {
        clickable: false,
        paramName: "file", // The name that will be used to transfer the file
        init: function () {
          thisDropzone = this;
          // Get the uploaded files via AJAX.
          $.get('/admin/get_uploaded_files?path=' + directory_path + '&id=' + capture_dataset_repository_id, function (data) {
            if (data == null) {
              return;
            }
            // Construct the uploaded files on the client side.
            $.each(data, function (key, value) {
              var item = { name: value.name, size: value.size, url: value.url, isDirectory: value.isDirectory };
              thisDropzone.emit("addedfile", item);
              let container = $('#previews ul');
              scanFiles(key, item, container, thisDropzone.options);
              thisDropzone.emit("complete", item);
            });
          });
          $('form#my-dropzone').find('div.dz-message').remove();
        }
      };

      // Datepicker
      var dateInput = $('input[name="dataset[date_of_capture]"]');
      var thisContainer = $('form.dataset_form').length>0 ? $('form.dataset_form').parent() : 'body';
      var options = {
        format: 'yyyy-mm-dd 00:00:00',
        container: thisContainer,
        todayHighlight: true,
        autoclose: true,
      };
      dateInput.datepicker(options);
    });
  </script>
{% endblock %}