# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
            $edan_url: '%edan_url%'
            $edan_app_id: '%edan_app_id%'
            $edan_auth_token: '%edan_auth_token%'
            $edan_version: '%edan_version%'
            $edan_search_endpoint: '%edan_search_endpoint%'
            $edan_content_endpoint: '%edan_content_endpoint%'
            $uploads_directory: '%uploads_directory%'
            $external_file_storage_path: '%external_file_storage_path%'
            $external_file_storage_on: '%external_file_storage_on%'
            $processing_service_location: '%processing_service_location%'
            $processing_service_client_id: '%processing_service_client_id%'
            # $processing_service_on: '%processing_service_on%'
            $conn: '@doctrine.dbal.default_connection'

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Controller\DefaultController:
        arguments:
            - '%uploads_directory%'

    AppBundle\Controller\InstallController:
        arguments:
            $remote_uploads_directory: '%uploads_directory%'


    # explicit commands registration
    AppBundle\Command\:
        resource: '../../src/AppBundle/Command/*'
        tags: ['console.command']

    # Swiftmailer Bundle command registration
    # Fixes:
    # User Deprecated: Auto-registration of the command "Symfony\Bundle\SwiftmailerBundle\Command\*" 
    # is deprecated since Symfony 3.4 and won't be supported in 4.0. Use PSR-4 based service discovery instead.
    Symfony\Bundle\SwiftmailerBundle\Command\:
        resource: '../../vendor/symfony/swiftmailer-bundle/Command/*'
        tags: ['console.command']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    AppBundle\Utils\GumpParseErrors:
        public: false
    # Additional services for OneupUploaderBundle
    app.file_namer:
        public: true
        class: AppBundle\Uploader\FileNamer

    app.upload_listener:
        public: true
        class: AppBundle\EventListener\UploadListener
        tags:
            - { name: kernel.event_listener, event: oneup_uploader.post_persist, method: onUpload }

    app.sabredav_client:
        class: Sabre\DAV\Client
        arguments:
            $settings:
                baseUri: '%external_file_storage_location%'
                userName: '%external_file_storage_username%'
                password: '%external_file_storage_password%'
                authType: '%external_file_storage_auth_type%'

    app.processing_client:
        class: Sabre\DAV\Client
        arguments:
            $settings:
                baseUri: '%processing_service_location%'
